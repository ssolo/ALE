diff --git a/CMakeLists.txt b/CMakeLists.txt
index aef85f4..c1187a6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -79,15 +79,15 @@ add_subdirectory (src)
 # Doxygen
 FIND_PACKAGE(Doxygen)
 IF (DOXYGEN_FOUND)
-  ADD_CUSTOM_TARGET (apidoc cp Doxyfile ${CMAKE_BINARY_DIR}/Doxyfile-build
+  ADD_CUSTOM_TARGET (${PROJECT_NAME}-apidoc cp Doxyfile ${CMAKE_BINARY_DIR}/Doxyfile-build
     COMMAND echo "OUTPUT_DIRECTORY=${CMAKE_BINARY_DIR}" >> ${CMAKE_BINARY_DIR}/Doxyfile-build
     COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_BINARY_DIR}/Doxyfile-build
-    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
-  ADD_CUSTOM_TARGET (apidoc-stable cp Doxyfile ${CMAKE_BINARY_DIR}/Doxyfile-stable
+    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+  ADD_CUSTOM_TARGET (${PROJECT_NAME}-apidoc-stable cp Doxyfile ${CMAKE_BINARY_DIR}/Doxyfile-stable
     COMMAND echo "OUTPUT_DIRECTORY=${CMAKE_BINARY_DIR}" >> ${CMAKE_BINARY_DIR}/Doxyfile-stable
     COMMAND echo "HTML_HEADER=header.html" >> ${CMAKE_BINARY_DIR}/Doxyfile-stable
     COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_BINARY_DIR}/Doxyfile-stable
-    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
+    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
 ENDIF (DOXYGEN_FOUND)
 
 ENDIF(NO_DEP_CHECK)
@@ -100,9 +100,9 @@ SET(CPACK_PACKAGE_VERSION_MAJOR "2")
 SET(CPACK_PACKAGE_VERSION_MINOR "4")
 SET(CPACK_PACKAGE_VERSION_PATCH "1")
 SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "The Bio++ Sequence library")
-SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING.txt")
-SET(CPACK_RESOURCE_FILE_AUTHORS "${CMAKE_SOURCE_DIR}/AUTHORS.txt")
-SET(CPACK_RESOURCE_FILE_INSTALL "${CMAKE_SOURCE_DIR}/INSTALL.txt")
+SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING.txt")
+SET(CPACK_RESOURCE_FILE_AUTHORS "${CMAKE_CURRENT_SOURCE_DIR}/AUTHORS.txt")
+SET(CPACK_RESOURCE_FILE_INSTALL "${CMAKE_CURRENT_SOURCE_DIR}/INSTALL.txt")
 SET(CPACK_SOURCE_GENERATOR "TGZ")
 # /!\ This assumes that an external build is used
 SET(CPACK_SOURCE_IGNORE_FILES 
@@ -119,14 +119,14 @@ SET(CPACK_DEBSOURCE_PACKAGE_FILE_NAME "lib${CMAKE_PROJECT_NAME}_${CPACK_PACKAGE_
 INCLUDE(CPack)
 
 #This adds the 'dist' target
-ADD_CUSTOM_TARGET(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
+ADD_CUSTOM_TARGET(${PROJECT_NAME}-dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
 
 IF(NOT NO_DEP_CHECK)
 IF (UNIX)
 
 #This creates rpm packages:
-ADD_CUSTOM_TARGET(rpm rpmbuild -ta ${CPACK_SOURCE_PACKAGE_FILE_NAME}.tar.gz)
-ADD_DEPENDENCIES(rpm dist)
+ADD_CUSTOM_TARGET(${PROJECT_NAME}-rpm rpmbuild -ta ${CPACK_SOURCE_PACKAGE_FILE_NAME}.tar.gz)
+ADD_DEPENDENCIES(${PROJECT_NAME}-rpm ${PROJECT_NAME}-dist)
 
 ENDIF()
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 187dc11..41a62bf 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -103,7 +103,7 @@ target_include_directories (${PROJECT_NAME}-static PUBLIC
   $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>
   )
 set_target_properties (${PROJECT_NAME}-static PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
-target_link_libraries (${PROJECT_NAME}-static ${BPP_LIBS_STATIC})
+target_link_libraries(bpp-seq-static bpp-core-static)
 
 # Build the shared lib
 add_library (${PROJECT_NAME}-shared SHARED ${CPP_FILES})
@@ -117,7 +117,7 @@ set_target_properties (${PROJECT_NAME}-shared
   VERSION ${${PROJECT_NAME}_VERSION}
   SOVERSION ${${PROJECT_NAME}_VERSION_MAJOR}
   )
-target_link_libraries (${PROJECT_NAME}-shared ${BPP_LIBS_SHARED})
+target_link_libraries (${PROJECT_NAME}-shared bpp-core-shared)
 
 # Install libs and headers
 install (
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index ab9b0aa..24582ad 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -14,13 +14,13 @@ file (GLOB test_cpp_files RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} *.cpp)
 foreach (test_cpp_file ${test_cpp_files})
   # Add each test (named as the filename without extension)
   get_filename_component (test_name ${test_cpp_file} NAME_WE)
-  add_executable (${test_name} ${test_cpp_file})
-  target_link_libraries (${test_name} ${PROJECT_NAME}-shared)
-  set_target_properties (${test_name} PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
+  add_executable (${PROJECT_NAME}-${test_name} ${test_cpp_file})
+  target_link_libraries (${PROJECT_NAME}-${test_name} ${PROJECT_NAME}-shared)
+  set_target_properties (${PROJECT_NAME}-${test_name} PROPERTIES POSITION_INDEPENDENT_CODE TRUE)
   add_test (
-    NAME ${test_name}
+    NAME ${PROJECT_NAME}-${test_name}
     WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-    COMMAND ${test_name}
+    COMMAND ${PROJECT_NAME}-${test_name}
     )
-  set_tests_properties (${test_name} PROPERTIES TIMEOUT 60000)
+  set_tests_properties (${PROJECT_NAME}-${test_name} PROPERTIES TIMEOUT 60000)
 endforeach (test_cpp_file)
